#!/bin/bash

#*************************** Arguments ***************************
# $1: Id
# $2: Binaries
# $3: Repetitions
# $4: Results path
# $5: [Optional] Label

if [ $# -lt 4 ]; then
    echo "Missing args"
    echo "Usage: task.sh <id> <binaries path> \
            <repetitions> <path to results folder> [label]"
    exit 0
fi

#************************** Definitions **************************
# Output file name
CSVFILE="results.csv"
# Scratch directory
SCRATCH_DIR="/home/christian.ponte/scratch"
# Thread number
THREAD_NUMBER="180"

# Auxiliary function
# Arguments: $1-repetitions $2-executable
function get_runtimes {
    local _return=""
    for i in $(seq 1 $1); do
        # Need to echo inside of $() to read all the output as a single line
        _output=$($2)
        _itime=$(echo $_output | sed -e "s/^.*Elapsed seconds = \
            \([0-9]*\)\([.]\{0,1\}[0-9]*\).*/\1\2/" | \
            grep "^[0-9]*[.]\{0,1\}[0-9]*$")
        if [ "x$_runtime" != "x" ]; then
            _return="$_return $_itime"
        else
            >&2 echo "Error on $2 iteration number $i"
        fi
    done
    echo $_return
}

#*****************************************************************
# Named args: arc util uni temp res reps label

{
# Store files generated by execution on scratch dir
mkdir -p $SCRATCH_DIR/$1
cd $SCRATCH_DIR/$1

# Set unlimited stack size
ulimit -s unlimited

# Set thread number
export OMP_NUM_THREADS=$THREAD_NUMBER
# Disable thread migration
export OMP_PLACES="cores"
export OMP_PROC_BIND="true"

# Write label at the beginning of the csv file
echo "$5,,,,,,"
echo ",,,,,,"

# For each executable
for exec in $(ls $temp); do
    # Write table header
    echo "$exec,$THREAD_NUMBER,,,"

    # Compute mean runtime and its standard deviation
    rt=$(get_runtimes $3 $2/$exec)
    mean=$($util/mean $rt)
    sdeviation=$($util/standard_deviation $mean $rt)

    # Write results
    echo "$threads,$mean,$sdeviation,$rt,"
done

} 1>>$4/$CSVFILE 2>"$4/error.log"
