#!/bin/bash

#*************************** Licensing ***************************
# This code is distributed under the GNU GPLv3 license. 
# Author: Christian Ponte Fern√°ndez
# Modified: 11 December 2016

#*************************** Arguments ***************************
# $1: Id
# $2: Binaries absolute path
# $3: Thread number
# $4: Repetitions
# $5: Results absolute path
# $6: Output file name

if [ $# -lt 6 ]; then
    echo "Missing args"
    echo "Usage: $0 <id> <binaries path> \
<thread number> <repetitions> <path to results folder> <output file>"
    exit 0
fi

#************************** Definitions **************************
# Scratch directory
SCRATCH_DIR="$HOME/scratch"

# Auxiliary function
# Arguments: $1-repetitions $2-executable
function repeat_execution {
    local _return=""
    for i in $(seq 1 $1); do
        # Need to echo inside of $() to read all the output as a single line
        _output=$($2)
        _itime=$(echo $_output | sed -e "s/^.*Elapsed seconds = \
\([0-9]*\)\([.]\{0,1\}[0-9]*\).*/\1\2/" | \
            grep "^[0-9]*[.]\{0,1\}[0-9]*$")
        if [ "x$_itime" != "x" ]; then
            _return="$_return $_itime"
        else
            >&2 echo "Error on $2 iteration number $i"
            >&2 echo "$_output"
        fi
    done
    echo $_return
}

{
# Store files generated by execution on scratch dir
mkdir -p $SCRATCH_DIR/$1
cd $SCRATCH_DIR/$1

# Set unlimited stack size
ulimit -s unlimited

# Set thread number
export OMP_NUM_THREADS=$3
# Disable thread migration
export OMP_PLACES="cores"
export OMP_PROC_BIND="true"

# For each executable
filecount=$(find $2 | wc -l)
for exec in $(find $2 | tail -n $((filecount-1)) | grep -v "$0$"); do
    echo "$exec $3 $(repeat_execution $4 $exec)"
done

} 1>$5/$6 2>"$5/error.log"
